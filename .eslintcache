[{"D:\\nikita\\projects\\react-todo\\src\\index.js":"1","D:\\nikita\\projects\\react-todo\\src\\App.jsx":"2","D:\\nikita\\projects\\react-todo\\src\\components\\TodoItem.jsx":"3","D:\\nikita\\projects\\react-todo\\src\\components\\TodoInput.jsx":"4","D:\\nikita\\projects\\react-todo\\src\\components\\TodoActions.jsx":"5","D:\\nikita\\projects\\react-todo\\src\\components\\TodoList.jsx":"6","D:\\nikita\\projects\\react-blog\\src\\index.js":"7","D:\\nikita\\projects\\react-blog\\src\\App.jsx":"8"},{"size":234,"mtime":1612766754456,"results":"9","hashOfConfig":"10"},{"size":874,"mtime":1613119798400,"results":"11","hashOfConfig":"10"},{"size":1368,"mtime":1613043048090,"results":"12","hashOfConfig":"10"},{"size":2098,"mtime":1613119552926,"results":"13","hashOfConfig":"10"},{"size":1288,"mtime":1613119252050,"results":"14","hashOfConfig":"10"},{"size":507,"mtime":1613119024668,"results":"15","hashOfConfig":"10"},{"size":234,"mtime":1612766754456,"results":"16","hashOfConfig":"17"},{"size":918,"mtime":1613246942469,"results":"18","hashOfConfig":"17"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1ax8enq",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"yx68r",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\nikita\\projects\\react-todo\\src\\index.js",[],["38","39"],"D:\\nikita\\projects\\react-todo\\src\\App.jsx",[],"D:\\nikita\\projects\\react-todo\\src\\components\\TodoItem.jsx",[],"D:\\nikita\\projects\\react-todo\\src\\components\\TodoInput.jsx",["40"],"import React from 'react';\r\n\r\nconst TodoInput = ({ setTasks, activeCollor, setActiveCollor }) => {\r\n  const colors = ['grey', 'blue', 'green', 'orange', 'red'];\r\n\r\n  const addTaskHandler = (event) => {\r\n    if (event.key === 'Enter' && event.currentTarget.value.trim() !== '') {\r\n      const newTaskText = event.currentTarget.value.replace(/\\s+/g, ' ').trim(); // remoing multiple spaces like '    a    a   ';\r\n      event.currentTarget.value = '';\r\n\r\n      setTasks((prevTasks) => {\r\n        if (prevTasks.length === 0) {\r\n          const initialTaskObject = {\r\n            id: 1,\r\n            text: newTaskText,\r\n            color: activeCollor,\r\n            isCompleted: false,\r\n          };\r\n          return [...prevTasks, initialTaskObject];\r\n        } else {\r\n          const newTaskObject = {\r\n            id: prevTasks[prevTasks.length - 1].id + 1,\r\n            text: newTaskText,\r\n            color: activeCollor,\r\n            isCompleted: false,\r\n          };\r\n\r\n          return [...prevTasks, newTaskObject];\r\n        }\r\n      });\r\n\r\n      setActiveCollor('grey');\r\n    }\r\n  };\r\n\r\n  let colorButtons;\r\n\r\n  const inputRef = React.useRef();\r\n\r\n  return (\r\n    <div className=\"todo-input\">\r\n      <input onKeyDown={addTaskHandler} ref={inputRef} type=\"text\" placeholder=\"Текст задачи...\" />\r\n      <ul>\r\n        {\r\n          (colorButtons = colors.map((color) => {\r\n            return (\r\n              <li\r\n                onClick={(event) => {\r\n                  setActiveCollor(color); // корректно ли хардкодом определять конкретное имя класса? или как можно было лучше сделать?\r\n                  inputRef.current.focus(); // корректное ли использование юзрефа для связки двух элементов?\r\n                }}\r\n                className={`todo-color ${color}  ${color === activeCollor ? 'active' : ''}`}\r\n                key={color}></li>\r\n            );\r\n          }))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","D:\\nikita\\projects\\react-todo\\src\\components\\TodoActions.jsx",[],"D:\\nikita\\projects\\react-todo\\src\\components\\TodoList.jsx",[],"D:\\nikita\\projects\\react-blog\\src\\index.js",[],["41","42"],"D:\\nikita\\projects\\react-blog\\src\\App.jsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":45,"column":12,"nodeType":"49","messageId":"50","endLine":45,"endColumn":24},{"ruleId":"43","replacedBy":"51"},{"ruleId":"45","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'colorButtons' is assigned a value but never used.","Identifier","unusedVar",["53"],["54"],"no-global-assign","no-unsafe-negation"]